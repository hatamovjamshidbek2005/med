// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"context"

	zero "gopkg.in/guregu/null.v4/zero"
)

type Querier interface {
	CountDoctorAppointment(ctx context.Context, arg CountDoctorAppointmentParams) (int64, error)
	CountDoctors(ctx context.Context) (int64, error)
	CountManyDoctors(ctx context.Context, firstName string) (int64, error)
	CountUserAppointments(ctx context.Context, arg CountUserAppointmentsParams) (int64, error)
	CountUsers(ctx context.Context, fullName zero.String) (int64, error)
	DeleteOneAppointment(ctx context.Context, id string) error
	DeleteOneDoctor(ctx context.Context, id string) error
	DeleteOneUser(ctx context.Context, id string) error
	EditOneAppointment(ctx context.Context, arg EditOneAppointmentParams) (string, error)
	EditOneDoctor(ctx context.Context, arg EditOneDoctorParams) (string, error)
	EditOneStatusAppointment(ctx context.Context, arg EditOneStatusAppointmentParams) (string, error)
	EditProfileUser(ctx context.Context, arg EditProfileUserParams) (string, error)
	ForgotPassword(ctx context.Context, arg ForgotPasswordParams) (string, error)
	InsertNotification(ctx context.Context, arg InsertNotificationParams) (string, error)
	InsertOneAppointment(ctx context.Context, arg InsertOneAppointmentParams) (string, error)
	InsertOneDoctor(ctx context.Context, arg InsertOneDoctorParams) (string, error)
	LoginOneUser(ctx context.Context, arg LoginOneUserParams) (string, error)
	RegisterOneUser(ctx context.Context, arg RegisterOneUserParams) (string, error)
	SelectDoctorAppointments(ctx context.Context, arg SelectDoctorAppointmentsParams) ([]SelectDoctorAppointmentsRow, error)
	SelectManyDoctors(ctx context.Context, arg SelectManyDoctorsParams) ([]Doctor, error)
	SelectManyUsers(ctx context.Context, fullName zero.String) ([]SelectManyUsersRow, error)
	SelectOneDoctor(ctx context.Context, id string) (SelectOneDoctorRow, error)
	SelectOnePassword(ctx context.Context, username string) (SelectOnePasswordRow, error)
	SelectOneUser(ctx context.Context, id string) (SelectOneUserRow, error)
	SelectPendingNotifications(ctx context.Context) ([]SelectPendingNotificationsRow, error)
	SelectUserAppointments(ctx context.Context, arg SelectUserAppointmentsParams) ([]SelectUserAppointmentsRow, error)
	UpdateNotificationStatus(ctx context.Context, arg UpdateNotificationStatusParams) error
}

var _ Querier = (*Queries)(nil)
